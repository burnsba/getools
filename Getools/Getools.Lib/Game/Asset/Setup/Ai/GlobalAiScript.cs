using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Getools.Lib.Game.Enums;

namespace Getools.Lib.Game.Asset.Setup.Ai
{
    public class GlobalAiScript
    {
        private static Dictionary<GlobalAiList, AiCommandBlock> _aiCommands = new Dictionary<GlobalAiList, AiCommandBlock>();

        private static List<byte[]> _globalCommandBytes = new List<byte[]>()
        {
            // dword_D_80037070: ~ 0
            new byte[] { 0x14, 0x00, 0x21, 0x00, 0x00, 0x01, 0x02, 0x01, 0x03, 0x01, 0x01, 0x04 },

            // dword_D_8003707C: ~ 1
            new byte[] { 0x02, 0x11, 0x03, 0x01, 0x11, 0x04, 0x00, 0x00 },

            // dword_D_80037084: ~ 2
            new byte[] { 0x02, 0x01, 0x03, 0x30, 0xfd, 0x11, 0x2f, 0x06, 0x01, 0x01, 0x02, 0x06, 0x32, 0x07, 0x3e, 0x0d, 0x3f, 0x0e, 0x46, 0x10, 0x3a, 0x0d, 0x3b, 0x0d, 0x0b, 0x03, 0x33, 0x35, 0x01, 0x03, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x03, 0x02, 0x03, 0x01, 0x01, 0x02, 0x10, 0x33, 0x35, 0x7f, 0x07, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x0a, 0x02, 0x07, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x06, 0x02, 0x0d, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x02, 0x0e, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x0b, 0x02, 0x11, 0x05, 0xfd, 0x00, 0x01, 0x04 },

            // dword_D_800370DC: ~ 3
            new byte[] { 0x33, 0x35, 0x32, 0x03, 0x0a, 0x00, 0x9a, 0x00, 0x00, 0x00, 0xc1, 0x18, 0x10, 0x00, 0x02, 0x02, 0x03, 0x35, 0x64, 0x03, 0x0a, 0x00, 0x9b, 0x00, 0x00, 0x01, 0x26, 0x18, 0x10, 0x00, 0x02, 0x02, 0x03, 0x35, 0x96, 0x03, 0x0a, 0x00, 0x9c, 0x00, 0x00, 0x00, 0xb7, 0x18, 0x10, 0x00, 0x02, 0x02, 0x03, 0x35, 0xc8, 0x03, 0x0a, 0x00, 0x9d, 0x00, 0x00, 0x00, 0x7b, 0x18, 0x10, 0x00, 0x02, 0x02, 0x03, 0x35, 0xfa, 0x03, 0x0a, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x38, 0x18, 0x10, 0x00, 0x02, 0x02, 0x03, 0x0a, 0x00, 0x9f, 0x00, 0x00, 0x00, 0x89, 0x18, 0x10, 0x00, 0x02, 0x02, 0x02, 0x07, 0x04 },

            // dword_D_8003713C: ~ 4
            new byte[] { 0x33, 0x35, 0x3c, 0x03, 0x0a, 0x00, 0xac, 0x00, 0x00, 0x00, 0x45, 0x00, 0x10, 0x00, 0x02, 0x02, 0x03, 0x35, 0x78, 0x03, 0x0a, 0x00, 0xad, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x10, 0x00, 0x02, 0x02, 0x03, 0x35, 0xb4, 0x03, 0x0a, 0x00, 0xae, 0x00, 0x00, 0x00, 0x4f, 0x00, 0x10, 0x00, 0x02, 0x02, 0x03, 0x0a, 0x00, 0xaf, 0x00, 0x00, 0x00, 0x59, 0x00, 0x10, 0x00, 0x02, 0x02, 0x02, 0x07, 0x04 },

            // dword_D_8003717C: ~ 5
            new byte[] { 0x02, 0x01, 0x03, 0x2f, 0x06, 0x01, 0x01, 0x02, 0x06, 0x32, 0x07, 0x3e, 0x0d, 0x46, 0x10, 0x3a, 0x0d, 0x3b, 0x0d, 0x01, 0x01, 0x02, 0x10, 0x33, 0x35, 0x7f, 0x07, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x0a, 0x02, 0x07, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x06, 0x02, 0x0d, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00 },

            // dword_D_800371B4: ~ 6
            new byte[] { 0x96, 0x01, 0x03, 0x33, 0x35, 0x20, 0x03, 0x0c, 0x94, 0x01, 0x07, 0x02, 0x03, 0x94, 0x01, 0x1a, 0x02, 0x02, 0x03, 0x33, 0x35, 0x0a, 0x03, 0x13, 0x02, 0x02, 0x03, 0x33, 0x35, 0x0a, 0x03, 0x0f, 0x02, 0x02, 0x03, 0x33, 0x35, 0x19, 0x03, 0x0e, 0x02, 0x02, 0x03, 0x33, 0x35, 0x32, 0x03, 0x10, 0x02, 0x02, 0x03, 0x33, 0x35, 0x40, 0x03, 0x11, 0x02, 0x02, 0x03, 0x35, 0x7f, 0x03, 0x12, 0x02, 0x02, 0x03, 0x33, 0x35, 0x7f, 0x0b, 0x14, 0x00, 0x01, 0x00, 0x00, 0x02, 0x02, 0x0b, 0x15, 0x00, 0x01, 0x00, 0x00, 0x02, 0x02, 0x02, 0x07, 0x04 },

            // dword_D_8003720C: ~ 7
            new byte[] { 0x94, 0x01, 0x28, 0x01, 0x07, 0x02, 0x01, 0x03, 0x2f, 0x06, 0x32, 0x07, 0x01, 0x01, 0x02, 0x07, 0x05, 0xfd, 0x00, 0x06, 0x02, 0x06, 0x07, 0x04 },

            // dword_D_80037224: ~ 8
            new byte[] { 0x94, 0x01, 0x41, 0x0e, 0x05, 0xfd, 0x00, 0x08, 0x02, 0x0e, 0x31, 0xf9, 0x0e, 0x05, 0xfd, 0x00, 0x02, 0x02, 0x0e, 0xc1, 0xfd, 0x00, 0x0c, 0x03, 0x05, 0xfd, 0x00, 0x08, 0x02, 0x03, 0x05, 0xfd, 0x00, 0x02, 0x04, 0x00 },

            // dword_D_80037248: ~ 9
            new byte[] { 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x04 },

            // dword_D_80037250: ~ 10
            new byte[] { 0x02, 0x01, 0x03, 0x32, 0x07, 0x3e, 0x0d, 0x3f, 0x0d, 0x46, 0x0d, 0x3a, 0x0d, 0x3b, 0x0d, 0x01, 0x01, 0x02, 0x07, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x06, 0x02, 0x0d, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x02, 0x0e, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x0b, 0x04, 0x00, 0x00, 0x00 },

            // dword_D_80037280: ~ 1
            new byte[] { 0x02, 0x01, 0x03, 0x2f, 0x06, 0x01, 0x01, 0x02, 0x06, 0x32, 0x0f, 0x7b, 0x00, 0x10, 0x3f, 0x10, 0x3a, 0x10, 0x3b, 0x10, 0x01, 0x01, 0x02, 0x10, 0x79, 0x00, 0x0f, 0x0d, 0x02, 0x04, 0x03, 0x2f, 0x0f, 0x01, 0x04, 0x02, 0x0f, 0x1c, 0x23, 0x28, 0x02, 0x03, 0x03, 0x2f, 0x02, 0x01, 0x03, 0x02, 0x02, 0x4e, 0xfd, 0x00, 0x0a, 0x23, 0x28, 0x02, 0x24, 0x23, 0x28, 0x05, 0x00, 0x02, 0x02, 0x05, 0x03, 0x2f, 0x02, 0x01, 0x05, 0x02, 0x02, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x04, 0x00 },

            // dword_D_800372D0: ~ 12
            new byte[] { 0x0d, 0x02, 0x01, 0x03, 0x2f, 0x02, 0x01, 0x01, 0x02, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x04, 0x00 },

            // dword_D_800372E0: ~ 13
            new byte[] { 0x02, 0x28, 0x28, 0x1b, 0xad, 0x6e, 0x6f, 0x20, 0x67, 0x6f, 0x21, 0x0a, 0x00, 0x02, 0x1b, 0x03, 0x3c, 0x06, 0x2f, 0x02, 0x01, 0x1b, 0x02, 0x01, 0x03, 0x78, 0x06, 0x2d, 0x9f, 0x00, 0x00, 0x00, 0x10, 0x2f, 0x02, 0x2d, 0x2f, 0x06, 0x4c, 0x00, 0xc8, 0x03, 0x01, 0x01, 0x02, 0x03, 0x01, 0x28, 0x02, 0x06, 0x3c, 0x03, 0x00, 0x02, 0x02, 0x24, 0x03, 0x4b, 0x00, 0x32, 0x03, 0x2f, 0x03, 0x01, 0x28, 0x02, 0x03, 0x9f, 0x00, 0x00, 0x00, 0x10, 0x2f, 0x02, 0x2b, 0x33, 0x35, 0x0a, 0x03, 0x1a, 0x02, 0x02, 0x03, 0x35, 0x32, 0x03, 0x0e, 0x02, 0x02, 0x03, 0x35, 0x3c, 0x03, 0x13, 0x02, 0x02, 0x03, 0x35, 0x50, 0x03, 0x13, 0x02, 0x02, 0x03, 0x35, 0x64, 0x03, 0x11, 0x02, 0x02, 0x03, 0x35, 0x96, 0x03, 0x12, 0x02, 0x02, 0x03, 0x35, 0xc8, 0x03, 0x14, 0x00, 0x01, 0x00, 0x00, 0x02, 0x02, 0x03, 0x15, 0x00, 0x01, 0x00, 0x00, 0x02, 0x02, 0x02, 0x3c, 0x03, 0x00, 0x1b, 0x02, 0x1b, 0x03, 0x33, 0x35, 0xa0, 0x03, 0x00, 0x1c, 0x02, 0x03, 0x03, 0x01, 0x01, 0x02, 0x1c, 0xae, 0x28, 0x1d, 0x02, 0x1d, 0x03, 0x2f, 0x03, 0xb4, 0x00, 0x00, 0x3c, 0x03, 0x01, 0x1d, 0x02, 0x03, 0x08, 0xad, 0x77, 0x61, 0x69, 0x74, 0x0a, 0x00, 0x95, 0x04, 0x33, 0x35, 0xa0, 0x03, 0x94, 0x04, 0x02, 0x03, 0xae, 0x02, 0x1e, 0x03, 0x3c, 0x03, 0x46, 0x03, 0x03, 0xb3, 0x00, 0x02, 0x58, 0x04, 0x96, 0x04, 0x05, 0x01, 0x28, 0x02, 0x05, 0x01, 0x1c, 0x02, 0x04, 0x01, 0x1e, 0x02, 0x03, 0x01, 0x01, 0x02, 0x2f, 0x78, 0x06, 0x03, 0x9e, 0x00, 0x00, 0x00, 0x10, 0x02, 0x03, 0x01, 0x2b, 0x04, 0x00, 0x00 },

            // dword_D_800373D0: ~ 14
            new byte[] { 0xae, 0x02, 0x1b, 0x03, 0xb4, 0x00, 0x00, 0x3c, 0x03, 0x01, 0x1b, 0x02, 0x03, 0x07, 0x04, 0x00 },

            // dword_D_800373E0: ~ 15
            new byte[] { 0xd2, 0x05, 0xfd, 0x00, 0x01, 0x04, 0x00, 0x00 },

            // dword_D_800373E8: ~ 16
            new byte[] { 0x91, 0x28, 0x93, 0x32, 0x02, 0x03, 0x17, 0x00, 0x01, 0x00, 0x00, 0x03, 0x02, 0x03, 0xae, 0x02, 0x1b, 0x03, 0xb4, 0x00, 0x00, 0x14, 0x03, 0x01, 0x1b, 0x02, 0x03, 0x0a, 0x00, 0x42, 0x00, 0x00, 0x00, 0x14, 0x04, 0x10, 0x02, 0x1c, 0x03, 0x2f, 0x03, 0x01, 0x1c, 0x02, 0x03, 0xbf, 0x00, 0xcd, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x14, 0x00, 0x21, 0x00, 0x00, 0x03, 0x02, 0x03, 0x16, 0x00, 0x01, 0x00, 0x00, 0x03, 0x02, 0x03, 0x02, 0x1e, 0x03, 0x2f, 0x03, 0x01, 0x1e, 0x02, 0x03, 0x06, 0x00, 0x02, 0x05, 0xfd, 0x00, 0x08, 0x04, 0x00, 0x00, 0x00 },

            // dword_D_80037444: ~ 17
            new byte[] { 0x23, 0xfd, 0x05, 0xfd, 0x00, 0x01, 0x04, 0x00 },
        };

        public static AiCommandBlock GetGlobalAiScript(GlobalAiList id)
        {
            var index = (int)id;
            if (index < 0 || index > _globalCommandBytes.Count - 1)
            {
                throw new IndexOutOfRangeException();
            }

            if (!_aiCommands.ContainsKey(id))
            {
                var script = AiCommandBuilder.ParseBytes(_globalCommandBytes[index]);
                script.ScriptType = AiScriptType.Global;
                script.Id = index;

                _aiCommands.Add(id, script);
            }

            return _aiCommands[id];
        }
    }
}
