<UserControl x:Class="Gebug64.Win.Windows.Mdi.MapControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gebug64.Win.Windows.Mdi"
             xmlns:ctl="clr-namespace:Gebug64.Win.Controls"
             xmlns:viewmodels="clr-namespace:Gebug64.Win.ViewModels"
             xmlns:enum="clr-namespace:Gebug64.Win.Enum"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewmodels:MapWindowViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style x:Key="LeftHeader" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="36" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style x:Key="LeftRowText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        
        <Style x:Key="LeftRowSpaceSmall" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="12" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
        
        <Style x:Key="LeftRowSpaceSmaller" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="6" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style x:Key="LeftLine" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Background" Value="Blue" />
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="32" MinHeight="32"></RowDefinition>
        </Grid.RowDefinitions>

        <StatusBar Grid.Row="1" >
        </StatusBar>

        <Grid Grid.Row="0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" MaxWidth="400"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Border
                Grid.Column="0"
                Background="White"
                BorderBrush="LightGray"
                BorderThickness="1"
                Padding="0"
                >
                <ScrollViewer
                    Padding="6">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Style="{StaticResource LeftHeader}">Stage</TextBlock>
                        
                        <TextBlock Style="{StaticResource LeftRowText}">Setup source:</TextBlock>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{Binding SetupBinFolder}" IsReadOnly="True" IsReadOnlyCaretVisible="True" VerticalAlignment="Center"></TextBox>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}" Command="{Binding SetSetupBinFolderCommand}">...</Button>
                        </Grid>

                        <Separator Style="{StaticResource LeftRowSpaceSmall}"/>

                        <TextBlock Style="{StaticResource LeftRowText}">Stan source:</TextBlock>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{Binding StanBinFolder}" IsReadOnly="True" IsReadOnlyCaretVisible="True" VerticalAlignment="Center"></TextBox>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}" Command="{Binding SetStanBinFolderCommand}">...</Button>
                        </Grid>

                        <Separator Style="{StaticResource LeftRowSpaceSmall}"/>

                        <TextBlock Style="{StaticResource LeftRowText}">BG source:</TextBlock>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" Text="{Binding BgBinFolder}" IsReadOnly="True" IsReadOnlyCaretVisible="True" VerticalAlignment="Center"></TextBox>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}" Command="{Binding SetBgBinFolderCommand}">...</Button>
                        </Grid>

                        <Separator Style="{StaticResource LeftRowSpaceSmall}"/>
                        
                        <RadioButton>Load map on stage load</RadioButton>
                        <RadioButton>Manual</RadioButton>

                        <ComboBox Style="{DynamicResource MonoCombo}" ItemsSource="{Binding Path=AvailableStages}" SelectedItem="{Binding Path=SelectedStage}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock  Text="{Binding Name}"></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Separator Style="{StaticResource LeftLine}"/>

                        <TextBlock Style="{StaticResource LeftHeader}">Layers</TextBlock>

                        <CheckBox Name="CheckBg" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.Bg}">bg</CheckBox>
                        <CheckBox Name="CheckStan" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.Stan}">stan</CheckBox>
                        <CheckBox Name="CheckBond" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.Bond}">Bond</CheckBox>
                        <CheckBox Name="CheckSetupPad" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupPad}">setup: pad</CheckBox>
                        <CheckBox Name="CheckSetupPathWaypoint" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupPathWaypoint}">setup: path waypoint</CheckBox>
                        <CheckBox Name="CheckSetupPatrolPath" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupPatrolPath}">setup: patrol path</CheckBox>
                        <CheckBox Name="CheckSetupAlarm" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupAlarm}">setup: alarm</CheckBox>
                        <CheckBox Name="CheckSetupAmmo" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupAmmo}">setup: ammo</CheckBox>
                        <CheckBox Name="CheckSetupAircraft" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupAircraft}">setup: aircraft</CheckBox>
                        <CheckBox Name="CheckSetupBodyArmor" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupBodyArmor}">setup: body armor</CheckBox>
                        <CheckBox Name="CheckSetupGuard" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupGuard}">setup: guard</CheckBox>
                        <CheckBox Name="CheckSetupCctv" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupCctv}">setup: cctv</CheckBox>
                        <CheckBox Name="CheckSetupCollectable" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupCollectable}">setup: collectable</CheckBox>
                        <CheckBox Name="CheckSetupDoor" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupDoor}">setup: door</CheckBox>
                        <CheckBox Name="CheckSetupDrone" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupDrone}">setup: drone</CheckBox>
                        <CheckBox Name="CheckSetupKey" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupKey}">setup: key</CheckBox>
                        <CheckBox Name="CheckSetupSafe" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupSafe}">setup: safe</CheckBox>
                        <CheckBox Name="CheckSetupSingleMontior" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupSingleMontior}">setup: single montior</CheckBox>
                        <CheckBox Name="CheckSetupStandardProp" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupStandardProp}">setup: standard prop</CheckBox>
                        <CheckBox Name="CheckSetupTank" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupTank}">setup: tank</CheckBox>
                        <CheckBox Name="CheckSetupIntro" IsEnabled="{Binding IsMapLoaded}" Command="{Binding Path=ToggleLayerVisibilityCommand}" CommandParameter="{x:Static enum:UiMapLayer.SetupIntro}">setup: intro (spawn)</CheckBox>

                        <Separator Style="{StaticResource LeftLine}"/>

                        <TextBlock Style="{StaticResource LeftHeader}">Vertical Bounds</TextBlock>
                        <TextBlock Style="{StaticResource LeftRowText}">(scaled)</TextBlock>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Style="{StaticResource LeftRowText}">min:</TextBlock>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <TextBox Grid.Column="2" Text="{Binding MapSelectedMinVerticalText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>

                        </Grid>

                        <Separator Style="{StaticResource LeftRowSpaceSmaller}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Style="{StaticResource LeftRowText}">max:</TextBlock>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <TextBox Grid.Column="2" Text="{Binding MapSelectedMaxVerticalText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        </Grid>

                        <Separator Style="{StaticResource LeftRowSpaceSmaller}"/>

                        <ctl:RangeSlider
                            Minimum="{Binding MapMinVertical}"
                            Maximum="{Binding MapMaxVertical}"
                            LowerValue="{Binding MapSelectedMinVertical, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            UpperValue="{Binding MapSelectedMaxVertical, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ></ctl:RangeSlider>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Style="{StaticResource LeftRowText}">stage min:</TextBlock>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <TextBlock Grid.Column="2" Text="{Binding MapMinVerticalText}"></TextBlock>
                        </Grid>
                        
                        <Separator Style="{StaticResource LeftRowSpaceSmaller}"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Style="{StaticResource LeftRowText}">stage max:</TextBlock>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <TextBlock Grid.Column="2" Text="{Binding MapMaxVerticalText}"></TextBlock>
                        </Grid>

                        <Separator Style="{StaticResource LeftLine}"/>

                        <TextBlock Style="{StaticResource LeftHeader}">Hide Props</TextBlock>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Style="{DynamicResource RoundButton}">all</Button>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}">none</Button>
                        </Grid>

                        <Separator Style="{StaticResource LeftLine}"/>

                        <TextBlock Style="{StaticResource LeftHeader}">Hide Rooms</TextBlock>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Style="{DynamicResource RoundButton}">all</Button>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}">none</Button>
                        </Grid>

                        <Separator Style="{StaticResource LeftLine}"/>

                        <TextBlock Style="{StaticResource LeftHeader}">Pads</TextBlock>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" MinWidth="120"></ComboBox>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}">goto</Button>
                        </Grid>

                        <Separator Style="{StaticResource LeftLine}"/>

                        <TextBlock Style="{StaticResource LeftHeader}">Guards</TextBlock>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" MinWidth="120"></ComboBox>
                            <Separator Grid.Column="1" Width="12" Background="Transparent"/>
                            <Button Grid.Column="2" Style="{DynamicResource RoundButton}">goto</Button>
                        </Grid>
                        
                        
                        

                        
                        <!-- end -->
                        <Separator Style="{StaticResource LeftRowSpaceSmall}"/>
                        <Separator Style="{StaticResource LeftRowSpaceSmall}"/>
                    </StackPanel>
                </ScrollViewer>
            </Border>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"></GridSplitter>

            <Border
                Grid.Column="2"
                Background="White"
                BorderBrush="LightGray"
                BorderThickness="1"
                Margin="0"
                Padding="0"
                >
                <ctl:MapView></ctl:MapView>
            </Border>
        </Grid>
    </Grid>
</UserControl>
